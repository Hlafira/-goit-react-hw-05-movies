{"version":3,"file":"static/js/636.cd147488.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/searchForm.module.css?a515","components/SearchForm/SearchForm.jsx","pages/MoviesPage/moviesPage.jsx","shared/API/theMovieDb.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  const listFilms = films.map(({ id, title }) => (\n    <li key={id}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location.pathname + location.search }}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n  return <ul>{listFilms}</ul>;\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  films: {},\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"searchForm_input__5z1VD\",\"button\":\"searchForm_button__jiWkN\"};","import PropTypes from 'prop-types';\n\nimport styles from './searchForm.module.css';\nconst SearchForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input className={styles.input} type=\"text\" name=\"query\" />\n      <button className={styles.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { fetchSearchMovies } from '../../shared/API/theMovieDb';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [films, setFilms] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query) {\n      fetchSearchMovies(query, 1)\n        .then(result => {\n          setFilms(prevFilms => {\n            return [...result];\n          });\n        })\n        .catch(e => {\n          console.log(e.message);\n        });\n    }\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} />\n      <MoviesList films={films} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = 'c1b8c874be54ebc5c34c225dbd6a36f5';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const imagePath = 'https://image.tmdb.org/t/p/w185/';\nexport const imageSmallPath = 'https://image.tmdb.org/t/p/w92/';\n\nexport async function fetchPoPularMovies(page) {\n  return instance\n\n    .get('trending/movie/day', {\n      params: {\n        page,\n        language: 'en-US',\n      },\n    })\n    .then(result => {\n      const results = result.data.results;\n\n      return results.map(({ id, name, original_title, title }) => ({\n        id,\n        title: name ? name : title ? title : original_title,\n      }));\n    });\n}\n\nexport async function fetchSearchMovies(query, page) {\n  return instance\n    .get('search/movie', {\n      params: {\n        page,\n        include_adult: false,\n        query,\n        sort_by: 'popularity.desc',\n      },\n    })\n    .then(result => {\n      const results = result.data.results;\n      return results.map(({ id, name, original_title, title }) => ({\n        id,\n        title: name ? name : title ? title : original_title,\n      }));\n    });\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return instance.get(`movie/${movieId}`, {}).then(({ data }) => data);\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return instance\n    .get(`movie/${movieId}/credits`, {})\n    .then(({ data }) => data.cast);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return instance\n    .get(`movie/${movieId}/reviews`, {})\n    .then(({ data }) => data.results);\n}\n"],"names":["MoviesList","films","location","useLocation","listFilms","map","id","title","to","state","from","pathname","search","defaultProps","handleSubmit","onSubmit","className","styles","type","name","useSearchParams","searchParams","setSearchParams","query","get","useState","setFilms","useEffect","fetchSearchMovies","then","result","prevFilms","catch","e","console","log","message","preventDefault","form","currentTarget","elements","value","reset","instance","axios","baseURL","params","api_key","imagePath","imageSmallPath","fetchPoPularMovies","page","language","data","results","original_title","include_adult","sort_by","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}