{"version":3,"file":"static/js/309.67e907b2.chunk.js","mappings":"2NACA,EAAuB,uB,SCEjBA,EAAW,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACMC,KAAI,SAAAC,GAC1B,OACE,2BACE,gBAAKC,IAAKD,EAAGE,aAAcC,IAAKH,EAAGI,KAAMC,MAAM,SAC/C,wBAAKL,EAAGI,QACR,yCAAiBJ,EAAGM,eAHbN,EAAGO,GAMf,IACD,OACE,+BACE,eAAIC,UAAWC,EAAf,SAA6BZ,KAGlC,EAED,IAEAD,EAASc,aAAe,CACtBZ,OAAQ,IClBV,IAiCA,EAjCa,WACX,IAEQS,GAFSI,EAAAA,EAAAA,MAEOC,MAAhBL,GACR,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KAqBA,OApBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBT,GACfU,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAAOnB,KACvB,gBAAGqB,EAAH,EAAGA,UAAWd,EAAd,EAAcA,UAAWF,EAAzB,EAAyBA,KAAMF,EAA/B,EAA+BA,aAA/B,MAAmD,CACjDK,GAAIa,EACJd,UAAAA,EACAF,KAAAA,EACAF,aAAcA,EACVmB,EAAAA,GAAiBnB,EACjB,gIANN,IAUFY,GAAU,kBAAMK,CAAN,GACX,IACAG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAAChB,KAEF,iCACE,mCACA,SAAC,EAAD,CAAUT,OAAQA,MAGvB,C,sOClCK4B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAJY,sCAQHC,EAAY,mCACZV,EAAiB,kCAEvB,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,0FACEP,EAEJQ,IAAI,qBAAsB,CACzBL,OAAQ,CACNI,KAAAA,EACAE,SAAU,WAGblB,MAAK,SAAAC,GAGJ,OAFgBA,EAAOkB,KAAKC,QAEbtC,KAAI,gBAAGQ,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMkC,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,MAA7B,MAA0C,CAC3DhC,GAAAA,EACAgC,MAAOnC,IAAcmC,GAAgBD,GAFpB,GAIpB,KAhBE,kEAmBA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAOR,GAAxC,0FACEP,EACJQ,IAAI,eAAgB,CACnBL,OAAQ,CACNI,KAAAA,EACAS,eAAe,EACfD,MAAAA,EACAE,QAAS,qBAGZ1B,MAAK,SAAAC,GAEJ,OADgBA,EAAOkB,KAAKC,QACbtC,KAAI,gBAAGQ,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMkC,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,MAA7B,MAA0C,CAC3DhC,GAAAA,EACAgC,MAAOnC,IAAcmC,GAAgBD,GAFpB,GAIpB,KAhBE,kEAmBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,0FACEnB,EAASQ,IAAT,gBAAsBW,GAAW,CAAC,GAAG5B,MAAK,qBAAGmB,IAAH,KAD5C,kEAIA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC6B,GAAjC,0FACEnB,EACJQ,IADI,gBACSW,EADT,YAC4B,CAAC,GACjC5B,MAAK,qBAAGmB,KAAgBU,IAAnB,KAHH,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,0FACEnB,EACJQ,IADI,gBACSW,EADT,YAC4B,CAAC,GACjC5B,MAAK,qBAAGmB,KAAgBC,OAAnB,KAHH,kE","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/castList.module.css?a5f2","components/CastList/CastList.jsx","components/Cast/Cast.jsx","shared/API/theMovieDb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"castList_list__8LSBS\"};","import PropTypes from 'prop-types';\nimport styles from './castList.module.css';\n\nconst CastList = ({ actors }) => {\n  const elements = actors.map(el => {\n    return (\n      <li key={el.id}>\n        <img src={el.profile_path} alt={el.name} width=\"128\" />\n        <h4>{el.name}</h4>\n        <h4>Character : {el.character}</h4>\n      </li>\n    );\n  });\n  return (\n    <>\n      <ul className={styles.list}>{elements}</ul>\n    </>\n  );\n};\n\nexport default CastList;\n\nCastList.defaultProps = {\n  actors: [],\n};\n\nCastList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useLocation } from 'react-router-dom';\nimport { imageSmallPath, fetchMovieCredits } from '../../shared/API/theMovieDb';\nimport { useEffect, useState } from 'react';\n\nimport CastList from '../CastList/CastList';\nconst Cast = () => {\n  const location = useLocation();\n\n  const { id } = location.state;\n  const [actors, setActors] = useState([]);\n  useEffect(() => {\n    fetchMovieCredits(id)\n      .then(result => {\n        const newActors = result.map(\n          ({ credit_id, character, name, profile_path }) => ({\n            id: credit_id,\n            character,\n            name,\n            profile_path: profile_path\n              ? imageSmallPath + profile_path\n              : 'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg',\n          })\n        );\n\n        setActors(() => newActors);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }, [id]);\n  return (\n    <>\n      <h2>Cast </h2>\n      <CastList actors={actors} />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = 'c1b8c874be54ebc5c34c225dbd6a36f5';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const imagePath = 'https://image.tmdb.org/t/p/w185/';\nexport const imageSmallPath = 'https://image.tmdb.org/t/p/w92/';\n\nexport async function fetchPoPularMovies(page) {\n  return instance\n\n    .get('trending/movie/day', {\n      params: {\n        page,\n        language: 'en-US',\n      },\n    })\n    .then(result => {\n      const results = result.data.results;\n\n      return results.map(({ id, name, original_title, title }) => ({\n        id,\n        title: name ? name : title ? title : original_title,\n      }));\n    });\n}\n\nexport async function fetchSearchMovies(query, page) {\n  return instance\n    .get('search/movie', {\n      params: {\n        page,\n        include_adult: false,\n        query,\n        sort_by: 'popularity.desc',\n      },\n    })\n    .then(result => {\n      const results = result.data.results;\n      return results.map(({ id, name, original_title, title }) => ({\n        id,\n        title: name ? name : title ? title : original_title,\n      }));\n    });\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return instance.get(`movie/${movieId}`, {}).then(({ data }) => data);\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return instance\n    .get(`movie/${movieId}/credits`, {})\n    .then(({ data }) => data.cast);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return instance\n    .get(`movie/${movieId}/reviews`, {})\n    .then(({ data }) => data.results);\n}\n"],"names":["CastList","elements","actors","map","el","src","profile_path","alt","name","width","character","id","className","styles","defaultProps","useLocation","state","useState","setActors","useEffect","fetchMovieCredits","then","result","newActors","credit_id","imageSmallPath","catch","e","console","log","instance","axios","baseURL","params","api_key","imagePath","fetchPoPularMovies","page","get","language","data","results","original_title","title","fetchSearchMovies","query","include_adult","sort_by","fetchMovieDetails","movieId","cast","fetchMovieReviews"],"sourceRoot":""}