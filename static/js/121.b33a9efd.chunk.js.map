{"version":3,"file":"static/js/121.b33a9efd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieOverview/movieOverview.module.css?46d3","components/MovieOverview/MovieOverview.jsx","webpack://goit-react-hw-05-movies/./src/pages/FilmDetailsPage/filmDetailsPage.module.css?c927","pages/FilmDetailsPage/FilmDetailsPage.jsx","shared/API/theMovieDb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmContainer\":\"movieOverview_filmContainer__i4wMH\",\"about\":\"movieOverview_about__cKZHH\"};","import PropTypes from 'prop-types';\nimport styles from './movieOverview.module.css';\n\nconst MovieOverview = ({ film }) => {\n  return (\n    <section className={styles.filmContainer}>\n      <img src={film.poster_path} alt=\"Poster\" />\n      <div className={styles.about}>\n        <h2>\n          {film.name}({film.year})\n        </h2>\n        <p>User score: {film.vote_average}%</p>\n        <h3>Overview</h3>\n        <p>{film.overview}</p>\n        <h3>Genres</h3>\n        <p>{film.genres}</p>\n      </div>\n    </section>\n  );\n};\n\nexport default MovieOverview;\n\nMovieOverview.defaultProps = {\n  film: {},\n};\n\nMovieOverview.propTypes = {\n  film: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    yea: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.string,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"additional\":\"filmDetailsPage_additional__74U2z\",\"linkBack\":\"filmDetailsPage_linkBack__0litk\"};","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { imagePath, fetchMovieDetails } from '../../shared/API/theMovieDb';\nimport MovieOverview from '../../components/MovieOverview/MovieOverview';\n\nimport styles from './filmDetailsPage.module.css';\nconst FilmDetailsPage = () => {\n  const { id } = useParams();\n  const [film, setFilm] = useState({});\n  const location = useLocation();\n  useEffect(() => {\n    fetchMovieDetails(id)\n      .then(result => {\n        const {\n          original_title,\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          release_date,\n          name,\n          genres,\n        } = result;\n        const newFilm = {\n          name: title ? title : original_title ? original_title : name,\n          overview,\n          poster_path: imagePath + poster_path,\n          vote_average: Math.floor(Number(vote_average) * 10),\n          year: release_date.slice(0, 4),\n          genres: genres.map(el => el.name).join(' '),\n        };\n        setFilm(() => newFilm);\n      })\n      .catch(e => console.log(e.message));\n  }, [id]);\n  const from = location.state ? location.state.from : '/';\n  return (\n    <>\n     \n        <Link className={styles.linkBack} to={from}>\n          &#8592;Go Back\n        </Link>\n\n        {film?.name && <MovieOverview film={film} />}\n        <section className={styles.additional}>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: from }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ id: id, from: from }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </section>\n        <Outlet />\n     \n    </>\n  );\n};\n\nexport default FilmDetailsPage;\n","import axios from 'axios';\nconst API_KEY = 'c1b8c874be54ebc5c34c225dbd6a36f5';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const imagePath = 'https://image.tmdb.org/t/p/w185/';\nexport const imageSmallPath = 'https://image.tmdb.org/t/p/w92/';\n\nexport async function fetchPoPularMovies(page) {\n  return instance\n\n    .get('trending/movie/day', {\n      params: {\n        page,\n        language: 'en-US',\n      },\n    })\n    .then(result => {\n      const results = result.data.results;\n\n      return results.map(({ id, name, original_title, title }) => ({\n        id,\n        title: name ? name : title ? title : original_title,\n      }));\n    });\n}\n\nexport async function fetchSearchMovies(query, page) {\n  return instance\n    .get('search/movie', {\n      params: {\n        page,\n        include_adult: false,\n        query,\n        sort_by: 'popularity.desc',\n      },\n    })\n    .then(result => {\n      const results = result.data.results;\n      return results.map(({ id, name, original_title, title }) => ({\n        id,\n        title: name ? name : title ? title : original_title,\n      }));\n    });\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return instance.get(`movie/${movieId}`, {}).then(({ data }) => data);\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return instance\n    .get(`movie/${movieId}/credits`, {})\n    .then(({ data }) => data.cast);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return instance\n    .get(`movie/${movieId}/reviews`, {})\n    .then(({ data }) => data.results);\n}\n"],"names":["MovieOverview","film","className","styles","src","poster_path","alt","name","year","vote_average","overview","genres","defaultProps","id","useParams","useState","setFilm","location","useLocation","useEffect","fetchMovieDetails","then","result","original_title","title","release_date","newFilm","imagePath","Math","floor","Number","slice","map","el","join","catch","e","console","log","message","from","state","to","instance","axios","baseURL","params","api_key","imageSmallPath","fetchPoPularMovies","page","get","language","data","results","fetchSearchMovies","query","include_adult","sort_by","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}